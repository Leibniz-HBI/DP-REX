name: DP-REX pytests

on:
  pull_request:
    branches: ["trunk"]

jobs:
  backend:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Setup Python # Set Python version
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
          cache-dependency-path: |
            pyproject.toml
            poetry.lock
      # workaround for 3.8
      - name: Install dependencies
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install --no-interaction
      - name: Test with pytest
        run: poetry run pytest --cov-report html:coverage-${{ matrix.python-version }}
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: coverage-${{ matrix.python-version }}
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "ui"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: "ui/package-lock.json"

      - name: Install frontend dependencies
        run: npm ci
      - name: Lint frontend
        run: npm run lint
      - name: test frontend
        run: npm run test
